version: '3.2'
services:
  api:
    build:
      context: .
      args:
        base_image: delner/datadog-apm-demo:rb-2.7
    depends_on:
      - ddagent
      - mysql
      - redis
    env_file: ./.env
    environment:
      - RAILS_ENV=production
      - BUNDLE_GEMFILE=/app/Gemfile
      - DD_AGENT_HOST=ddagent
      - DDAGENT_HOST=ddagent
      - DATABASE_URL=mysql2://mysql:mysql@mysql:3306
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY_BASE=5ced2602472cdf650e2cfa5be40c7d0dffd4e1da1483e21fa9c776e338b363c8bf75144bc6e6c5177a0d7a208a899552f98b3f82d4ea74cf5f9b9d3accbb1537
      - DD_DEBUG_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rails-five
      - DD_PROFILING_ENABLED=true
      # Use these to choose what is run
      - DD_DEMO_ENV_PROCESS=puma
      - DD_DEMO_ENV_FEATURES=tracing,profiling
      # Use this for a local version of ddtrace
      # - DD_DEMO_ENV_GEM_LOCAL_DDTRACE=/vendor/dd-trace-rb
      # Use these for a specific revision of ddtrace
      # - DD_DEMO_ENV_GEM_GIT_DDTRACE=https://github.com/DataDog/dd-trace-rb.git
      # - DD_DEMO_ENV_GEM_REF_DDTRACE=f233336994315bfa04dac581387a8152bab8b85a
    expose:
      - "80"
    ports:
      - "80:80"
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - ./data/app:/data/app
      - bundle:/usr/local/bundle
      - ../../../images/ruby/include:/vendor/dd-demo
      # Point first half of this bind to your local dd-trace-rb git repo
      # - ../../../../dd-trace-rb:/vendor/dd-trace-rb
  ddagent:
    image: datadog/agent
    environment:
      - DD_APM_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=false
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY
      - LOG_LEVEL=DEBUG
      - DD_LOGS_STDOUT=yes
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    expose:
      - "8125/udp"
      - "8126"
    ports:
      - "${DD_METRIC_AGENT_PORT}:8125/udp"
      - "${DD_TRACE_AGENT_PORT}:8126"
    volumes:
      - type: bind
        source: ../../../config/agent.yaml
        target: /etc/datadog-agent/datadog.yaml
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock:ro
      - type: bind
        source: /proc/
        target: /host/proc/:ro
      - type: bind
        source: /sys/fs/cgroup/
        target: /host/sys/fs/cgroup:ro
  mysql:
    image: mysql:5.6
    environment:
      - MYSQL_DATABASE=acme_production
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
    expose:
      - "3306"
  redis:
    image: redis:3.0
    expose:
      - "6379"
  loadtester_a:
    build:
      context: ../../../images/wrk
    command: -t1000 -c1000 -d43200s -s /scripts/scenarios/basic/default.lua http://api/basic/default
    depends_on:
      - api
    environment:
      - HEALTH_CHECK_URL=http://api/health
    volumes:
      - ./data/wrk:/data
      # - ../../../images/wrk/scripts:/scripts
volumes:
  bundle:
